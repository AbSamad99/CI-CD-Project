name: Deploy the infrastructure

on: workflow_dispatch

jobs:
  deploy:
    runs-on: ubuntu-22.04

    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      ANSIBLE_HOST_KEY_CHECKING: False

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Initialize terraform
        run: terraform -chdir=terraform/infrastructure init

      - name: Apply Terraform
        run: terraform -chdir=terraform/infrastructure apply --auto-approve --var="whitelist_ip=${{vars.WHITELIST_IP}}"

      - name: Fetch machine IP
        run: |
          terraform -chdir=terraform/infrastructure output -json machine_ip | grep -v "^\[command\]" > machine_ip.json
          tr -d '"' < machine_ip.json > machine_ip.txt

      - name: Set the private key for the provisioned machine
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.RSA_SECRET_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Create the inventory file
        run: |
          echo "[provisioned_machine]" > ansible/inventory.ini
          echo "$(cat machine_ip.txt)" >> ansible/inventory.ini
          cat ansible/inventory.ini

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Run ansible playbooks
        working-directory: ansible
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
          JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
        run: |
          ansible-playbook install_docker.yml
          ansible-playbook run_compose.yml
